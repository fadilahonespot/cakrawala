// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	entity "github.com/fadilahonespot/cakrawala/domain/entity"
	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"
)

// CourierRepository is an autogenerated mock type for the CourierRepository type
type CourierRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: ctx, tx, req
func (_m *CourierRepository) Create(ctx context.Context, tx *gorm.DB, req *entity.Courier) error {
	ret := _m.Called(ctx, tx, req)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *gorm.DB, *entity.Courier) error); ok {
		r0 = rf(ctx, tx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewCourierRepository creates a new instance of CourierRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCourierRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *CourierRepository {
	mock := &CourierRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
