// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MailjetWrapper is an autogenerated mock type for the MailjetWrapper type
type MailjetWrapper struct {
	mock.Mock
}

// SendEmail provides a mock function with given fields: ctx, email, title, body
func (_m *MailjetWrapper) SendEmail(ctx context.Context, email string, title string, body string) error {
	ret := _m.Called(ctx, email, title, body)

	if len(ret) == 0 {
		panic("no return value specified for SendEmail")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) error); ok {
		r0 = rf(ctx, email, title, body)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMailjetWrapper creates a new instance of MailjetWrapper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMailjetWrapper(t interface {
	mock.TestingT
	Cleanup(func())
}) *MailjetWrapper {
	mock := &MailjetWrapper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
