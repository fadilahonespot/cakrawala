// Code generated by mockery v2.38.0. DO NOT EDIT.

package mocks

import (
	context "context"

	cached "github.com/fadilahonespot/cakrawala/infrastructure/cached"

	mock "github.com/stretchr/testify/mock"
)

// RedisClient is an autogenerated mock type for the RedisClient type
type RedisClient struct {
	mock.Mock
}

// DeleteEmailVerification provides a mock function with given fields: ctx, email
func (_m *RedisClient) DeleteEmailVerification(ctx context.Context, email string) error {
	ret := _m.Called(ctx, email)

	if len(ret) == 0 {
		panic("no return value specified for DeleteEmailVerification")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, email)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetCity provides a mock function with given fields: ctx, provinceId
func (_m *RedisClient) GetCity(ctx context.Context, provinceId string) string {
	ret := _m.Called(ctx, provinceId)

	if len(ret) == 0 {
		panic("no return value specified for GetCity")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, provinceId)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetCityProvince provides a mock function with given fields: ctx, provinceId, cityId
func (_m *RedisClient) GetCityProvince(ctx context.Context, provinceId string, cityId string) string {
	ret := _m.Called(ctx, provinceId, cityId)

	if len(ret) == 0 {
		panic("no return value specified for GetCityProvince")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string, string) string); ok {
		r0 = rf(ctx, provinceId, cityId)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetEmailNotif provides a mock function with given fields: ctx, externalId
func (_m *RedisClient) GetEmailNotif(ctx context.Context, externalId string) string {
	ret := _m.Called(ctx, externalId)

	if len(ret) == 0 {
		panic("no return value specified for GetEmailNotif")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, externalId)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetEmailVerification provides a mock function with given fields: ctx, email
func (_m *RedisClient) GetEmailVerification(ctx context.Context, email string) (string, error) {
	ret := _m.Called(ctx, email)

	if len(ret) == 0 {
		panic("no return value specified for GetEmailVerification")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (string, error)); ok {
		return rf(ctx, email)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, email)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetGenerateText provides a mock function with given fields: ctx, productId
func (_m *RedisClient) GetGenerateText(ctx context.Context, productId string) cached.GenerateText {
	ret := _m.Called(ctx, productId)

	if len(ret) == 0 {
		panic("no return value specified for GetGenerateText")
	}

	var r0 cached.GenerateText
	if rf, ok := ret.Get(0).(func(context.Context, string) cached.GenerateText); ok {
		r0 = rf(ctx, productId)
	} else {
		r0 = ret.Get(0).(cached.GenerateText)
	}

	return r0
}

// GetProvince provides a mock function with given fields: ctx
func (_m *RedisClient) GetProvince(ctx context.Context) string {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for GetProvince")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context) string); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// SetCity provides a mock function with given fields: ctx, provinceId, value
func (_m *RedisClient) SetCity(ctx context.Context, provinceId string, value string) error {
	ret := _m.Called(ctx, provinceId, value)

	if len(ret) == 0 {
		panic("no return value specified for SetCity")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, provinceId, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetCityProvince provides a mock function with given fields: ctx, provinceId, cityId, value
func (_m *RedisClient) SetCityProvince(ctx context.Context, provinceId string, cityId string, value string) error {
	ret := _m.Called(ctx, provinceId, cityId, value)

	if len(ret) == 0 {
		panic("no return value specified for SetCityProvince")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string, string) error); ok {
		r0 = rf(ctx, provinceId, cityId, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetEmailNotif provides a mock function with given fields: ctx, externalId, value
func (_m *RedisClient) SetEmailNotif(ctx context.Context, externalId string, value string) error {
	ret := _m.Called(ctx, externalId, value)

	if len(ret) == 0 {
		panic("no return value specified for SetEmailNotif")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, externalId, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetEmailVerification provides a mock function with given fields: ctx, email, code
func (_m *RedisClient) SetEmailVerification(ctx context.Context, email string, code string) error {
	ret := _m.Called(ctx, email, code)

	if len(ret) == 0 {
		panic("no return value specified for SetEmailVerification")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, string) error); ok {
		r0 = rf(ctx, email, code)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetGenerateText provides a mock function with given fields: ctx, productId, value
func (_m *RedisClient) SetGenerateText(ctx context.Context, productId int, value cached.GenerateText) error {
	ret := _m.Called(ctx, productId, value)

	if len(ret) == 0 {
		panic("no return value specified for SetGenerateText")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int, cached.GenerateText) error); ok {
		r0 = rf(ctx, productId, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetProvince provides a mock function with given fields: ctx, value
func (_m *RedisClient) SetProvince(ctx context.Context, value string) error {
	ret := _m.Called(ctx, value)

	if len(ret) == 0 {
		panic("no return value specified for SetProvince")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, value)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRedisClient creates a new instance of RedisClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRedisClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *RedisClient {
	mock := &RedisClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
